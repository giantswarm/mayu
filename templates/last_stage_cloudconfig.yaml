#cloud-config
hostname: {{.Host.Hostname}}
coreos:
  units:
  - name: update-engine.service
    enable: false
    command: stop
    mask: true
  - name: locksmithd.service
    command: stop
    mask: true
{{template "quobyte" .}}
{{if eq .ClusterNetwork.NetworkModel "bond"}}{{template "net_bond" .}}{{end}}
{{if eq .ClusterNetwork.NetworkModel "singlenic"}}{{template "net_singlenic" .}}{{end}}
{{if eq .ClusterNetwork.NetworkModel "bridge"}}{{template "net_bridge" .}}{{end}}
  - name: systemd-networkd-wait-online.service
    enable: true
    command: start
  - name: set-giantswarm-environment.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Configures giantswarm environment
      Wants=network-online.target
      After=network-online.target

      [Service]
      Type=oneshot
      ExecStart=/bin/sh -c 'echo "COREOS_PRIVATE_IPV4={{.Host.InternalAddr}}" > /etc/environment'

      [Install]
      WantedBy=multi-user.target
  {{if index .TemplatesEnv "yochu_version"}}
  - name: yochu.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Giant Swarm yochu
      Wants=network-online.target
      After=network-online.target
      Before=etcd2.service fleet.service docker.service

      [Service]
      Type=oneshot
      EnvironmentFile=/etc/yochu-env
      ExecStartPre=/usr/bin/mkdir -p /home/core/bin
      ExecStartPre=-/usr/bin/wget {{index .TemplatesEnv "yochu_http_endpoint"}}/yochu/${YOCHU_VERSION}/yochu -O /home/core/bin/yochu
      ExecStartPre=-/usr/bin/wget {{index .TemplatesEnv "mayu_http_endpoint"}}/mayuctl -O /home/core/bin/mayuctl
      ExecStartPre=/usr/bin/chmod +x /home/core/bin/yochu
      ExecStartPre=/usr/bin/chmod +x /home/core/bin/mayuctl
      ExecStart=/home/core/bin/yochu setup -v -d --start-daemons=false --subnet="{{index .TemplatesEnv "yochu_localsubnet"}}" --gateway="{{index .TemplatesEnv "yochu_gateway"}}" --private-registry={{index .TemplatesEnv "yochu_private_registry"}} --http-endpoint={{index .TemplatesEnv "yochu_http_endpoint"}} --fleet-version=${FLEET_VERSION} --etcd-version=${ETCD_VERSION} --docker-version=${DOCKER_VERSION} --rkt-version=${RKT_VERSION} --k8s-version=${K8S_VERSION}
      ExecStartPost=/bin/sh -c 'sleep 5'
      ExecStartPost=/home/core/bin/mayuctl boot-complete --host={{.MayuHost}} --port={{.MayuPort}} {{if .NoTLS}}--no-tls {{end}}--update-versions
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target
  {{end}}
  - name: etcd2.service
    enable: true
    command: start
  - name: fleet.service
    enable: true
    command: start
  - name: docker.service
    enable: true
    command: start
  update:
    reboot-strategy: off
  fleet:
    etcd_servers: http://{{.Host.InternalAddr}}:2379
{{if .Host.FleetMetadata}}    metadata: {{.Host.FleetMetadata}}{{end}}
  etcd2:
{{if .EtcdDiscoveryUrl}}    discovery: {{.EtcdDiscoveryUrl}}{{end}}
    advertise-client-urls: http://{{.Host.InternalAddr}}:2379
    initial-advertise-peer-urls: http://{{.Host.InternalAddr}}:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://{{.Host.InternalAddr}}:2380,http://{{.Host.InternalAddr}}:7001
write_files:
- path: /etc/systemd/system/fleet.service.d/30-giantswarm.conf
  permissions: 0644
  owner: root
  content: |
    [Service]
    {{if .Host.FleetMetadata}}Environment="FLEET_METADATA={{.Host.FleetMetadata}}"{{end}}
    Environment="FLEET_DISABLE_ENGINE={{.Host.FleetDisableEngine}}"
- path: /etc/hosts
  permissions: 0644
  owner: root
  content: |
    127.0.0.1 localhost
    127.0.0.1 {{.Host.Hostname}}
    127.0.0.1 etcd.giantswarm
- path: /etc/resolv.conf
  permissions: 0644
  owner: root
  content: |
    {{range $server := .ClusterNetwork.DNS }}nameserver {{ $server }}
    {{end}}
{{if index .TemplatesEnv "yochu_version"}}
- path: /etc/yochu-env
  permissions: 0644
  owner: root
  content: |
    YOCHU_VERSION={{index .TemplatesEnv "yochu_version"}}
    DOCKER_VERSION={{index .TemplatesEnv "docker_version"}}
    ETCD_VERSION={{index .TemplatesEnv "etcd_version"}}
    FLEET_VERSION={{index .TemplatesEnv "fleet_version"}}
    RKT_VERSION={{index .TemplatesEnv "rkt_version"}}
    K8S_VERSION={{index .TemplatesEnv "k8s_version"}}
{{end}}

ssh_authorized_keys:
{{range $index, $pubkey := (index .TemplatesEnv "ssh_authorized_keys")}}- {{ $pubkey }}
{{end}}
